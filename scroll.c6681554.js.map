{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,oDAMMC,EAAaC,SAASC,cAAc,gBACpCC,EAAUF,SAASC,cAAc,YACjCE,EAAkBH,SAASC,cAAc,kBAE3CG,EAAQ,GACRC,EAAO,EACPC,EAAa,E,SAMFC,I,OAAAA,EAAfC,EAAAX,EAAA,CAAAW,EAAAC,GAAAC,MAAA,SAAAC,EAA4BC,G,qEACxBA,EAAEC,iBAEFR,EAAO,EACPC,EAAa,EACbF,EAAQQ,EAAEE,cAAcC,YAAYC,MAAMC,OAC1Cf,EAAQgB,UAAY,GAEpBf,EAAgBgB,UAAUC,IAAI,aAEhB,KAAVhB,EAAY,C,sBACZiB,I,0BAGJ,IACIC,IACF,MAAOC,GACLf,EAAAgB,GAASC,OAAOC,QAAQ,gC,6CAjBLC,MAAAC,KAAAC,W,SAqBZP,I,OAAAQ,EAAgBH,MAAAC,KAAAC,W,SAAhBC,I,OAAAA,EAAftB,EAAAX,EAAA,CAAAW,EAAAC,GAAAC,MAAA,SAAAC,I,IACUoB,EACAC,EACAC,E,mFAFe,EAAAC,EAAAC,UAAS/B,EAAOC,EA3BzB,I,UA2BN0B,EAAMK,EAAAC,KACNL,EAAUD,EAAOO,KACjBL,EAAYD,EAAQC,UAC1B3B,GAAc0B,EAAQO,KAAKC,OAED,IAAtBR,EAAQC,UAAe,C,uBACvBQ,I,2BAEgB,IAATpC,GACPqC,EAAmBV,G,QAGvBW,EAAcX,EAAQO,MACC,IAAI/B,EAAAoC,GAAJ,CAAmB,cAAcC,UAExDxC,GAAQ,EACRyC,EAAGC,QAAQC,KAEP1C,IAAe2B,GACf9B,EAAgBgB,UAAU8B,OAAO,a,6CApBVtB,MAAAC,KAAAC,WAvB/B9B,EAAWmD,iBAAiB,U,SAEAtC,G,OAAbL,EAAYoB,MAAAC,KAAAC,cA6C3B,IAAMiB,EAAK,IAAIK,sBAAqB,SAAAC,GAClCA,EAAQC,SAAQ,SAAAC,GACTA,EAAMC,iBAGXP,IACE1B,WAIN,SAAS0B,IACL,OAAOhD,SAASC,cAAc,6BAIlC,SAAS0C,EAAca,GACnB,IAAMC,EAAgBD,EACjBE,KAAI,SAAAC,G,IAAGC,EAAED,EAAFC,GAAIC,EAAaF,EAAbE,cAAeC,EAAYH,EAAZG,aAAcC,EAAIJ,EAAJI,KAAMC,EAAKL,EAALK,MAAOC,EAAKN,EAALM,MAAOC,EAAQP,EAARO,SAAUC,EAASR,EAATQ,UACnE,MAAO,oDAE+BC,OADDP,EAAc,wDAE/BO,OADkBR,EAAG,sCACCQ,OAAtBN,EAAa,WAGFM,OAHWL,EAAK,yJAMhBK,OAHAJ,EAAM,4HAMHI,OAHHH,EAAM,+HAMFG,OAHDF,EAAS,gIAGEE,OAAVD,EAAU,qHAOhDE,KAAK,IAEdnE,EAAQoE,mBAAmB,YAAab,GAKxC,SAASf,EAAmBV,GACxBxB,EAAAgB,GAASC,OAAO8C,QAAQ,oBAAsCH,OAAlBpC,EAAQC,UAAU,aAGlE,SAASZ,IACLb,EAAAgB,GAASC,OAAOC,QAAQ,+BAG5B,SAASe,IACLjC,EAAAgB,GAASC,OAAOC,QAAQ,+D","sources":["src/scroll.js"],"sourcesContent":["import './css/styles.css';\nimport {fetchImg} from './js/fetchImg';\nimport Notiflix from 'notiflix';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst searchForm = document.querySelector('#search-form');\nconst gallery = document.querySelector('.gallery');\nconst endOfSearchText = document.querySelector('.gallery__text');\n\nlet query = '';\nlet page = 1;\nlet loadedHits = 0;\nconst perPage = 40;\n\n\nsearchForm.addEventListener('submit', onSearchForm);\n\nasync function onSearchForm(e) {\n    e.preventDefault();\n\n    page = 1;\n    loadedHits = 0;\n    query = e.currentTarget.searchQuery.value.trim();\n    gallery.innerHTML = '';\n\n    endOfSearchText.classList.add('is-hidden');\n    \n    if (query === '') {\n        alertEmptySearch();\n        return;\n    }\n    try {\n        createCollection();\n    } catch (error) {\n        Notiflix.Notify.failure(\"Ooops...Something goes wrong\");\n    }\n}\n\nasync function createCollection() {\n    const object = await fetchImg(query, page, perPage);\n    const objData = object.data;\n    const totalHits = objData.totalHits;\n    loadedHits += objData.hits.length;\n\n    if (objData.totalHits === 0) {\n        alertNoImagesFound();\n        return;\n    } else if (page === 1) {\n        alertImagesToFound(objData);\n    } \n    \n    renderGallery(objData.hits);\n    const simpleLightBox = new SimpleLightbox('.gallery a').refresh();\n    \n    page += 1;\n    io.observe(getLastImgEl());\n    \n    if (loadedHits === totalHits) {\n        endOfSearchText.classList.remove('is-hidden');\n    }\n}\n\nconst io = new IntersectionObserver(entries => {\n  entries.forEach(entry => {\n    if (!entry.isIntersecting) {\n        return;\n    }\n    getLastImgEl();\n      createCollection();\n  });\n});\n\nfunction getLastImgEl() {\n    return document.querySelector('.gallery__link:last-child');\n}\n\n\nfunction renderGallery(images) {\n    const galleryMarkup = images\n        .map(({ id, largeImageURL, webformatURL, tags, likes, views, comments, downloads }) => {\n            return `\n                <a class=\"gallery__link\" href=\"${largeImageURL}\">\n                    <div class=\"photo-card\" id=\"${id}\">\n                    <img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" />\n                    <div class=\"info\">\n                        <p class=\"info-item\">\n                            <b>Likes</b> ${likes}\n                        </p>\n                        <p class=\"info-item\">\n                            <b>Views</b> ${views}\n                        </p>\n                        <p class=\"info-item\">\n                            <b>Comments</b> ${comments}\n                        </p>\n                        <p class=\"info-item\">\n                            <b>Downloads</b> ${downloads}\n                        </p>\n                    </div>\n                </div>\n                </a>\n    `\n        })\n        .join('');\n\ngallery.insertAdjacentHTML('beforeend', galleryMarkup);\n}\n\n\n\nfunction alertImagesToFound(objData) {\n    Notiflix.Notify.success(`Hooray! We found ${objData.totalHits} images.`);\n}\n\nfunction alertEmptySearch() {\n    Notiflix.Notify.failure('This field cannot be empty!');\n}\n\nfunction alertNoImagesFound() {\n    Notiflix.Notify.failure('No images were found for this request, try something else.');\n}\n"],"names":["$bpxeT","parcelRequire","$5b53d4e451fa0420$var$searchForm","document","querySelector","$5b53d4e451fa0420$var$gallery","$5b53d4e451fa0420$var$endOfSearchText","$5b53d4e451fa0420$var$query","$5b53d4e451fa0420$var$page","$5b53d4e451fa0420$var$loadedHits","$5b53d4e451fa0420$var$_onSearchForm","$parcel$interopDefault","$2TvXO","mark","_callee","e","preventDefault","currentTarget","searchQuery","value","trim","innerHTML","classList","add","$5b53d4e451fa0420$var$alertEmptySearch","$5b53d4e451fa0420$var$createCollection","error","$iU1Pc","Notify","failure","apply","this","arguments","$5b53d4e451fa0420$var$_createCollection","object","objData","totalHits","$1DGNh","fetchImg","_ctx","sent","data","hits","length","$5b53d4e451fa0420$var$alertNoImagesFound","$5b53d4e451fa0420$var$alertImagesToFound","$5b53d4e451fa0420$var$renderGallery","$5IjG7","refresh","$5b53d4e451fa0420$var$io","observe","$5b53d4e451fa0420$var$getLastImgEl","remove","addEventListener","IntersectionObserver","entries","forEach","entry","isIntersecting","images","galleryMarkup","map","param","id","largeImageURL","webformatURL","tags","likes","views","comments","downloads","concat","join","insertAdjacentHTML","success"],"version":3,"file":"scroll.c6681554.js.map"}