{"mappings":"gkBAMA,MAAMA,EAAaC,SAASC,cAAc,gBACpCC,EAAUF,SAASC,cAAc,YAEjCE,GADcH,SAASC,cAAc,cACnBD,SAASC,cAAc,mBAE/C,IAAIG,EAAQ,GACRC,EAAO,EACPC,EAAa,EA6BjBC,eAAeC,IACX,MACMC,SADe,EAAAC,EAAAC,UAASP,EAAOC,EA7BzB,KA8BWO,KACjBC,EAAYJ,EAAQI,UAC1BP,GAAcG,EAAQK,KAAKC,OAED,IAAtBN,EAAQI,WA4EZG,EAAAC,GAASC,OAAOC,QAAQ,8DAxEX,IAATd,GA+DR,SAA4BI,GACxBO,EAAAC,GAASC,OAAOE,QAAQ,oBAAoBX,EAAQI,qBA/DhDQ,CAAmBZ,GA6B3B,SAAuBa,GACnB,MAAMC,EAAgBD,EACjBE,KAAI,EAACC,GAAEA,EAAEC,cAAEA,EAAaC,aAAEA,EAAYC,KAAEA,EAAIC,MAAEA,EAAKC,MAAEA,EAAKC,SAAEA,EAAQC,UAAEA,KAC5D,oDAC8BN,wDACCD,sCAClBE,WAAsBC,yJAGXC,4HAGAC,+HAGGC,gIAGCC,sHAQtCC,KAAK,IAEd/B,EAAQgC,mBAAmB,YAAaX,GAtDpCY,CAAc1B,EAAQK,MACC,IAAIE,EAAAoB,GAAJ,CAAmB,cAAcC,UAExDhC,GAAQ,EACRiC,EAAGC,QAkBIvC,SAASC,cAAc,8BAhB1BK,IAAeO,GACfV,EAAgBqC,UAAUC,OAAO,aA9CzC1C,EAAW2C,iBAAiB,UAE5BnC,eAA4BoC,GAQxB,GAPAA,EAAEC,iBAEFxC,EAAQuC,EAAEE,cAAcC,YAAYC,MAAMC,OAC1C9C,EAAQ+C,UAAY,GAEpB9C,EAAgBqC,UAAUU,IAAI,aAEhB,KAAV9C,EAEA,YA2FJY,EAAAC,GAASC,OAAOC,QAAQ,+BAxFxB,IACIX,IAEF,MAAO2C,GACLnC,EAAAC,GAASC,OAAOC,QAAQ,oCAgChC,MAAMmB,EAAK,IAAIc,sBAAqBC,IAClCA,EAAQC,SAAQC,IACTA,EAAMC,gBAGXhD","sources":["src/scroll.js"],"sourcesContent":["import './css/styles.css';\nimport {fetchImg} from './js/fetchImg';\nimport Notiflix from 'notiflix';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst searchForm = document.querySelector('#search-form');\nconst gallery = document.querySelector('.gallery');\nconst loadMoreBtn = document.querySelector('.load-more');\nconst endOfSearchText = document.querySelector('.gallery__text');\n\nlet query = '';\nlet page = 1;\nlet loadedHits = 0;\nconst perPage = 40;\n\n\nsearchForm.addEventListener('submit', onSearchForm);\n\nasync function onSearchForm(e) {\n    e.preventDefault();\n\n    query = e.currentTarget.searchQuery.value.trim();\n    gallery.innerHTML = '';\n\n    endOfSearchText.classList.add('is-hidden');\n    \n    if (query === '') {\n        alertEmptySearch();\n        return;\n    }\n\n    try {\n        createCollection();\n        \n    } catch (error) {\n        Notiflix.Notify.failure(\"Ooops...Something goes wrong\");\n\n    }\n\n}\n\nasync function createCollection() {\n    const object = await fetchImg(query, page, perPage);\n    const objData = object.data;\n    const totalHits = objData.totalHits;\n    loadedHits += objData.hits.length;\n\n    if (objData.totalHits === 0) {\n        alertNoImagesFound();\n    } \n\n    if (page === 1) {\n        alertImagesToFound(objData);\n    }\n    \n    renderGallery(objData.hits);\n    const simpleLightBox = new SimpleLightbox('.gallery a').refresh();\n    \n    page += 1;\n    io.observe(getLastImgEl());\n    \n    if (loadedHits === totalHits) {\n        endOfSearchText.classList.remove('is-hidden');\n    }\n\n}\n\nconst io = new IntersectionObserver(entries => {\n  entries.forEach(entry => {\n    if (!entry.isIntersecting) {\n      return;\n    }\n    createCollection();\n  });\n});\n\nfunction getLastImgEl() {\n    return document.querySelector('.gallery__link:last-child')\n}\n\n\nfunction renderGallery(images) {\n    const galleryMarkup = images\n        .map(({ id, largeImageURL, webformatURL, tags, likes, views, comments, downloads }) => {\n            return `\n                <a class=\"gallery__link\" href=\"${largeImageURL}\">\n                    <div class=\"photo-card\" id=\"${id}\">\n                    <img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" />\n                    <div class=\"info\">\n                        <p class=\"info-item\">\n                            <b>Likes</b> ${likes}\n                        </p>\n                        <p class=\"info-item\">\n                            <b>Views</b> ${views}\n                        </p>\n                        <p class=\"info-item\">\n                            <b>Comments</b> ${comments}\n                        </p>\n                        <p class=\"info-item\">\n                            <b>Downloads</b> ${downloads}\n                        </p>\n                    </div>\n                </div>\n                </a>\n      `\n       \n        })\n        .join('');\n\ngallery.insertAdjacentHTML('beforeend', galleryMarkup);\n}\n\n\n\nfunction alertImagesToFound(objData) {\n    Notiflix.Notify.success(`Hooray! We found ${objData.totalHits} images.`);\n}\n\nfunction alertEmptySearch() {\n    Notiflix.Notify.failure('This field cannot be empty!');\n}\n\nfunction alertNoImagesFound() {\n    Notiflix.Notify.failure('No images were found for this request, try something else.');\n}\n"],"names":["$b02d73f657452650$var$searchForm","document","querySelector","$b02d73f657452650$var$gallery","$b02d73f657452650$var$endOfSearchText","$b02d73f657452650$var$query","$b02d73f657452650$var$page","$b02d73f657452650$var$loadedHits","async","$b02d73f657452650$var$createCollection","objData","$dOcJw","fetchImg","data","totalHits","hits","length","$parcel$interopDefault","$eWCmQ","Notify","failure","success","$b02d73f657452650$var$alertImagesToFound","images","galleryMarkup","map","id","largeImageURL","webformatURL","tags","likes","views","comments","downloads","join","insertAdjacentHTML","$b02d73f657452650$var$renderGallery","$fZKcF","refresh","$b02d73f657452650$var$io","observe","classList","remove","addEventListener","e","preventDefault","currentTarget","searchQuery","value","trim","innerHTML","add","error","IntersectionObserver","entries","forEach","entry","isIntersecting"],"version":3,"file":"scroll.da08001c.js.map"}